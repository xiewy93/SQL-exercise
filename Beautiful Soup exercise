【14】Beautiful Soup库的安装
http://www.crummy.com/software/BeautifulSoup
cmd -> pip install beautifulsoup4

from bs4 import BeautifulSoup
soup = BeautifulSoup('<html>data</html>', 'html.parser')#html格式文件，及对应解

释器
或通过打开url的形式提供html
soup2 = BeautifulSoup(open('D://demo.html'), 'html.parser')#html格式文件，及对应

解释器

【15】Beautiful Soup库的基本元素
解析器            使用方法                           条件       
bs4的html解析器   BeautifulSoup(mk, 'html.parser')   安装bs4库
lxml的html解析器  BeautifulSoup(mk, 'lxml')          pip install lxml
lxml的xml解析器   BeautifulSoup(mk, 'xml')           pip install lxml
html5lib解析器    BeautifulSoup(mk, 'html5lib')      pip install html5lib

基本元素         说明
Tag              标签，最基本的信息单元组织元素，分别用<>和</>标明开头和结尾
Name             标签的名字，<p>...</p>的名字是'p',格式：<tag>.name
Attributes       标签的属性，字典形式，格式：<tag>.attrs
NavigableString  标签内非属性字符串，<>...</>中的字符串，格式：<tag>.string
Comment          标签内字符串的注释部分，一种特殊的Comment类型

【16】基于bs4库的html内容遍历方法
import requests
from bs4 import BeautifulSoup
r = requests.get('http://python123.io/ws/demo.html')
demo = r.text
soup = BeautifulSoup(demo, 'html.parser')
soup.head
soup.head.contents#子节点
soup.body.contents#子节点
len(soup.body.contents)
soup.body.contents[1]
soup.title.parent#父节点

标签树的上行遍历：
soup = BeautifulSoup(demo, 'html.parser')
for parent in soup.a.parents:
    if parent is None:
       print(parent)
    else:
      print(parent.name)

p->body->html->[document]

标签树的平行遍历：
遍历后续节点：
for sibling in soup.a.next_siblings:
    print(sibling)

遍历前续节点：
for sibling in soup.a.previous_siblings:
    print(sibling)


【16】基于bs4库的html格式化输出
prettify()

【17】基于bs4库的html内容查找方法
soup.find_all('a')
soup.find_all(['a','b'])

【18】中国大学排名定向爬虫实例
import requests
import bs4
from bs4 import BeautifulSoup

def getHTMLText(url):
    try:
       r = requests.get(url, timeout=30)
       r.raise_for_status()
       r.encoding = r.apparent_encoding
       return r.text
    except:
       return ''


def fillUnivList(ulist, html):
    soup = BeautifulSoup(html, 'html.parser') 
    for tr in soup.find('tbody').children:
        if isinstance(tr, bs4.element.Tag):
           tds = tr('td')
           ulist.append([tds[0].string,tds[1].string,tds[2].string])


def printUnivList(ulist, num):
    tplt = '{0:^10}\t{1:{3}^10}\t{2:^10}'
    print(tplt.format('排名','学校','总分',chr(12288))
    for i in range(num):
        u = ulist[i]
        print(tplt.format(u[0],u[1],u[2],chr(12288)))

def main():
    uinfo = []
    url = 'http://www.zuihaodaxue.cn/zuihaodaxuepaiming2016.html'
    html = getHTMLText(url)
    fillUnivList(ulist, html)
    printUnivList(ulist, 20)
