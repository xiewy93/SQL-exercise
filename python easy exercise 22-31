# 1. 按逗号分隔列表

L = [1,2,3,4,5]
s1 = ','.join(str(n) for n in L)
print s1

# 2. 有一个已经排好序的数组。现输入一个数，要求按原来的规律将它插入数组中

a = [1,3,5,7,9,11,13,15,17,19,21,23,25,27,29]
b = 18
a.append(b)
a.sort()

# 3. 求输入数字的平方，如果平方运算后小于 50 则退出

while(1):
    n=input('请输入一个数字：')
    print '运算结果为: %d' % (n**2)
    if n**2 < 50:
        quit()
    else:
        print '请继续输入'
        
# 4. 取一个整数a从右端开始的4〜7位

a = input('请输入一个数字：') % a
b = str(a)
c = b[len(b)-7:len(b)-4]

# 5.if __name__ == '__main__' 如何正确理解?

__name__ 是当前模块名，当模块被直接运行时模块名为 __main__ 。
这句话的意思就是，当模块被直接运行时，以下代码块将被运行，当模块是被导入时，代码块不被运行。
https://zhuanlan.zhihu.com/p/21297237

# 6. 打印出杨辉三角形（10行）

if __name__ == '__main__':
    a = []
    for i in range(10):
        a.append([])
        for j in range(10):
            a[i].append(0)
    for i in range(10):
        a[i][0] = 1
        a[i][i] = 1
    for i in range(2,10):
        for j in range(1,i):
            a[i][j] = a[i - 1][j-1] + a[i - 1][j]
    from sys import stdout
    for i in range(10):
        for j in range(i + 1):
            stdout.write(str(a[i][j]))
            stdout.write(' ')
        print

# 6. 列表转换为字典

i = ['a', 'b']
l = [1, 2]
print dict([i,l])

# 7.计算字符串中子串出现的次数

str1 = raw_input('input a string:\n')
str2 = raw_input('input a sub string:\n')
ncount = str1.count(str2)
print (ncount)

# 8. 字符串日期转换为易读的日期格式

from dateutil import parser
dt = parser.parse("Aug 28 2015 12:00AM")
print (dt)

# 9. 某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的。
加密规则如下：每位数字都加上5,然后用和除以10的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。

n=raw_input()
n = str(n)
a=[]
for i in range(4):
    a.append(int(n[i])+5)
a[0],a[3]=a[3],a[0]
a[1],a[2]=a[2],a[1]
print "".join('%s' %s for s in a)

# 10. 读取7个数（1—50）的整数值，每读取一个值，程序打印出该值个数的*

n = 1
while n <= 7:
      a = int(raw_input('input a number:\n'))
      while a < 1 or a > 50:
            a = int(raw_input('input a number:\n'))
            print a * '*'
      n += 1
      
# 11. 输出素数

lower = int(input("输入区间最小值: "))
upper = int(input("输入区间最大值: "))

for num in range(lower,upper + 1):
	# 素数大于 1
	if num > 1:
		for i in range(2,num):
			if (num % i) == 0:
				break
		else:
			print(num)
